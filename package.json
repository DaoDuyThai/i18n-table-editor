{
  "name": "locale-languages-json-table-editor",
  "displayName": "Locale Languages JSON Table Editor",
  "description": "A powerful table editor for managing translation files in JSON format",
  "version": "1.0.0",
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:localeLanguagesJsonTableEditor.openTable"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "localeLanguagesJsonTableEditor.openTable",
        "title": "Open Locale Languages JSON Table Editor",
        "icon": "$(globe)"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "localeLanguagesJsonTableEditor.sidebar",
          "name": "Locale Languages JSON Table Editor",
          "when": "true"
        }
      ]
    },
    "configuration": {
      "title": "Locale Languages JSON Table Editor",
      "properties": {
        "localeLanguagesJsonTableEditor.copyTemplate": {
          "type": "string",
          "default": "t('{key}')",
          "description": "Template for copying keys. Use {key} as placeholder.",
          "examples": [
            "t('{key}')",
            "$t('{key}')",
            "{{ '{key}' | translate }}",
            "<Trans i18nKey=\"{key}\" />",
            "AppLocalizations.of(context)!.{key}"
          ]
        },
        "localeLanguagesJsonTableEditor.defaultCopyMode": {
          "type": "string",
          "enum": [
            "plain",
            "template"
          ],
          "default": "plain",
          "description": "Default copy mode when double-clicking keys",
          "enumDescriptions": [
            "Copy plain key only",
            "Copy with template applied"
          ]
        },
        "localeLanguagesJsonTableEditor.templates": {
          "type": "object",
          "default": {
            "react-i18next": "t('{key}')",
            "react-i18next-trans": "<Trans i18nKey=\"{key}\" />",
            "vue-i18n": "$t('{key}')",
            "angular-i18n": "{{ '{key}' | translate }}",
            "flutter-intl": "AppLocalizations.of(context)!.{key}",
            "custom": "t('{key}')"
          },
          "description": "Predefined templates for different frameworks",
          "additionalProperties": {
            "type": "string"
          },
          "patternProperties": {
            ".*": {
              "type": "string",
              "description": "Template string with {key} placeholder"
            }
          }
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./"
  },
  "devDependencies": {
    "@types/vscode": "^1.74.0",
    "@types/node": "16.x",
    "typescript": "^4.9.4"
  }
}